"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAnimeDetails: function() { return /* binding */ getAnimeDetails; },\n/* harmony export */   getEpisodeDownloadLinks: function() { return /* binding */ getEpisodeDownloadLinks; },\n/* harmony export */   getPopularAnime: function() { return /* binding */ getPopularAnime; },\n/* harmony export */   getTrendingAnime: function() { return /* binding */ getTrendingAnime; },\n/* harmony export */   searchAnime: function() { return /* binding */ searchAnime; }\n/* harmony export */ });\nconst BASE_URL = \"https://anime.apex-cloud.workers.dev/\";\n/**\n * Helper function to ensure image URLs are properly formatted\n */ function processImageUrl(url) {\n    if (!url) return \"/placeholder.svg\";\n    // If it's already a full URL, return as is\n    if (url.startsWith(\"http\")) {\n        return url;\n    }\n    // If it's a relative path, assume it needs the proxy\n    if (url.startsWith(\"/\")) {\n        return \"\".concat(BASE_URL.slice(0, -1)).concat(url);\n    }\n    return url;\n}\n/**\n * Search anime by title\n * GET /?method=search&query={anime_name}\n */ async function searchAnime(query) {\n    if (!query.trim()) return [];\n    try {\n        const response = await fetch(\"\".concat(BASE_URL, \"?method=search&query=\").concat(encodeURIComponent(query)));\n        if (!response.ok) {\n            throw new Error(\"Search failed: \".concat(response.statusText));\n        }\n        const data = await response.json();\n        // Process the data to ensure image URLs are properly formatted\n        const results = data.data || [];\n        return results.map((anime)=>({\n                ...anime,\n                poster: processImageUrl(anime.poster)\n            }));\n    } catch (error) {\n        console.error(\"Search API error:\", error);\n        throw new Error(\"Failed to search anime\");\n    }\n}\n/**\n * Get anime series details and episodes\n * GET /?method=series&session={session_id}&page={page}\n */ async function getAnimeDetails(sessionId) {\n    let page = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;\n    try {\n        const response = await fetch(\"\".concat(BASE_URL, \"?method=series&session=\").concat(encodeURIComponent(sessionId), \"&page=\").concat(page));\n        if (!response.ok) {\n            throw new Error(\"Series fetch failed: \".concat(response.statusText));\n        }\n        const data = await response.json();\n        // Process the data to ensure image URLs are properly formatted\n        return {\n            ...data,\n            poster: processImageUrl(data.poster),\n            episodes: (data.episodes || []).map((episode)=>({\n                    ...episode,\n                    snapshot: processImageUrl(episode.snapshot)\n                }))\n        };\n    } catch (error) {\n        console.error(\"Series API error:\", error);\n        throw new Error(\"Failed to fetch anime details\");\n    }\n}\n/**\n * Get download links for a specific episode\n * GET /?method=episode&session={session_id}&ep={episode_id}\n */ async function getEpisodeDownloadLinks(sessionId, episodeId) {\n    try {\n        const response = await fetch(\"\".concat(BASE_URL, \"?method=episode&session=\").concat(encodeURIComponent(sessionId), \"&ep=\").concat(encodeURIComponent(episodeId)));\n        if (!response.ok) {\n            throw new Error(\"Episode fetch failed: \".concat(response.statusText));\n        }\n        const data = await response.json();\n        // Transform the response to extract quality and size from name\n        return (data || []).map((item)=>{\n            const qualityMatch = item.name.match(/(\\d+p)/i);\n            const sizeMatch = item.name.match(/\\(([^)]+)\\)/);\n            return {\n                link: item.link,\n                name: item.name,\n                quality: qualityMatch ? qualityMatch[1] : \"Unknown\",\n                size: sizeMatch ? sizeMatch[1] : \"Unknown\"\n            };\n        });\n    } catch (error) {\n        console.error(\"Episode API error:\", error);\n        throw new Error(\"Failed to fetch download links\");\n    }\n}\n/**\n * Get trending anime (simulated with popular search)\n */ async function getTrendingAnime() {\n    return searchAnime(\"popular anime\");\n}\n/**\n * Get popular anime (simulated with top search)\n */ async function getPopularAnime() {\n    return searchAnime(\"top anime\");\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.ts\n"));

/***/ })

});